#!/usr/bin/perl


use strict;
use warnings;

use Getopt::Std;
use Getopt::Long;
use Data::Dumper;

#################################################################################
# opts
#################################################################################

my %opts;

my $VERBOSITY_QUIET = 1;
my $VERBOSITY_NORMAL = 3;
my $VERBOSITY_EXTRA = 5;
my $VERBOSITY_EPIC = 7;
my $VERBOSITY_LEGENDARY = 9;

# set defaults
$opts{ "verbosity" } = $VERBOSITY_NORMAL;
$opts{ "level" } = 20;

GetOptions( 'god=s' => \$opts{ "god" },
            'enemy=s' => \$opts{"enemy"},
            'items=s' => \$opts{"items"},
            'enemy_items=s' => \$opts{"enemy_items"},
            'verbosity=i' => \$opts{"verbosity"},
            'iterations=i' => \$opts{"iterations"},
            'level=i' => \$opts{"level"} );

if ( not defined $opts{ "god" } or not defined $opts{ "items" } ) {
    print "god and items are required options\n";
    exit;
}
if ( not defined $opts{ "enemy" } or not defined $opts{ "enemy_items" } ) {
    print "enemy god and items are required options\n";
    exit;
}




#################################################################################
# base stat tables
#################################################################################

my %base_stats = (
    "type" => {
        "freya" => "magical",
        "sol" => "magical",
        "scylla" => "magical",
        "nox" => "magical",
        "kukulkan" => "magical",
        "chronos" => "magical",

        "artemis" => "physical",
        "awilix" => "physical",
        "medusa" => "physical",
        "xbal" => "physical",
        "rama" => "physical",
        "ullr" => "physical",
        "serqet" => "physical",
        "thor" => "physical",
        "fenrir" => "physical",
        "bastet" => "physical",
        "apollo" => "physical",
        "neith" => "physical",
        "mercury" => "physical",
        "chiron" => "physical",
        "hou_yi" => "physical",
        "nemesis" => "physical",
        "arachne" => "physical",
        "kali" => "physical",
    },
    "physical_protection" => {
        "bastet" => (12 + 2.9 * $opts{"level"}),
        "chiron" => (12 + 2.8 * $opts{"level"}),
        "sol" => (9 + 2.6 * $opts{"level"}),
        "khepri" => (19 + 3 * $opts{"level"}),
        "bellona" => (18 + 3 * $opts{"level"}),
        "hercules" => (18 + 3 * $opts{"level"}),
    },
    "magical_protection" => {
        "bastet" => (30 + 0.9 * $opts{"level"}),
        "chiron" => (30 + 0.9 * $opts{"level"}),
        "sol" => 30,
        "khepri" => (30 + 0.9 * $opts{"level"}),
        "bellona" => (30 + 0.9 * $opts{"level"}),
        "hercules" => (30 + 0.9 * $opts{"level"}),
    },
    "health" => {
        "bastet" => (415 + 80 * $opts{"level"}),
        "chiron" => (460 + 75 * $opts{"level"}),
        "sol" => (400 + 75 * $opts{"level"}),
        "khepri" => (510 + 90 * $opts{"level"}),
        "bellona" => (480 + 85 * $opts{"level"} ),
        "hercules" => (480 + 86 * $opts{"level"}),
    },
    "base_attack_speed" => {
        "freya" => 0.95,
        "sol" => 1,
        "scylla" => 1,
        "nox" => 1,
        "kukulkan" => 0.87,
        "chronos" => 1,

        "artemis" => 0.95,
        "awilix" => 1,
        "medusa" => 0.95,
        "xbal" => 0.95,
        "rama" => 0.95,
        "ullr" => 0.95,
        "serqet" => 1,
        "thor" => 1,
        "fenrir" => 1,
        "bastet" => 1,
        "apollo" => 0.95,
        "neith" => 0.95,
        "mercury" => 1,
        "chiron" => 1,
        "hou_yi" => 0.9,
        "nemesis" => 1,
        "arachne" => 1,
        "kali" => 1,
    },
    "attack_speed_modifier" => {
        "freya" => (.0195 * $opts{"level"}),
        "sol" => (.018 * $opts{"level"}),
        "scylla" => (.008 * $opts{"level"}),
        "nox" => (.008 * $opts{"level"}),
        "kukulkan" => (.0091 * $opts{"level"}),
        "chronos" => (.008 * $opts{"level"}),

        "artemis" => (.014 * $opts{"level"}),
        "awilix" => (.0189 * $opts{"level"}),
        "medusa" => (.014 * $opts{"level"}),
        "xbal" => (.01 * $opts{"level"}),
        "rama" => (.017 * $opts{"level"}),
        "ullr" => (.015 * $opts{"level"}),
        "serqet" => (.0216 * $opts{"level"}),
        "thor" => (.0145 * $opts{"level"}),
        "fenrir" => (.017 * $opts{"level"}),
        "bastet" => (.0198 * $opts{"level"}),
        "apollo" => (.017 * $opts{"level"}),
        "neith" => (.016 * $opts{"level"}),
        "mercury" => (.024 * $opts{"level"}),
        "chiron" => (.011 * $opts{"level"}),
        "hou_yi" => (.012 * $opts{"level"}),
        "nemesis" => (.0216 * $opts{"level"}),
        "arachne" => (.02 * $opts{"level"}),
        "kali" => (.0216 * $opts{"level"}),
    },
    "auto_damage" => {
        "freya" => (35 + 1.5 * $opts{"level"}),
        "sol" => (34 + 1.45 * $opts{"level"}),
        "scylla" => (34 + 1.45 * $opts{"level"}),
        "nox" => (34 + 1.5 * $opts{"level"}),
        "kukulkan" => (34 + 1.45 * $opts{"level"}),
        "chronos" => (35 + 1.5 * $opts{"level"}),

        "artemis" => (35 + 2.05 * $opts{"level"}),
        "awilix" => (38 + 2.16 * $opts{"level"}),
        "medusa" => (38 + 2.6 * $opts{"level"}),
        "xbal" => (37 + 2.5 * $opts{"level"}),
        "rama" => (40 + 2.5 * $opts{"level"}),
        "ullr" => (38 + 2.4 * $opts{"level"}),
        "serqet" => (39 + 2.25 * $opts{"level"}),
        "thor" => (39 + 2.4 * $opts{"level"}),
        "fenrir" => (38 + 2.3 * $opts{"level"}),
        "bastet" => (38 + 2.13 * $opts{"level"}),
        "apollo" => (40 + 2.6 * $opts{"level"}),
        "neith" => (35 + 2.3 * $opts{"level"}),
        "mercury" => (38 + 2.13 * $opts{"level"}),
        "chiron" => (35 + 2.35 * $opts{"level"}),
        "hou_yi" => (38 + 2.8 * $opts{"level"}),
        "nemesis" => (39 + 2.25 * $opts{"level"}),
        "arachne" => (38 + 2.2 * $opts{"level"}),
        "kali" => (37 + 2.32 * $opts{"level"}),
    },
    "mana" => {
        "freya" => (220 + 37 * $opts{"level"}),
        "sol" => (300 + 57 * $opts{"level"}),
        "scylla" => (298 + 56 * $opts{"level"}),
        "nox" => (250 + 38 * $opts{"level"}),
        "kukulkan" => (265 + 45 * $opts{"level"}),
        "chronos" => (240 + 42 * $opts{"level"}),

        "artemis" => (205 + 34 * $opts{"level"}),
        "awilix" => (220 + 38 * $opts{"level"}),
        "medusa" => (220 + 34 * $opts{"level"}),
        "xbal" => (220 + 37 * $opts{"level"}),
        "rama" => (205 + 34 * $opts{"level"}),
        "ullr" => (230 + 40 * $opts{"level"}),
        "serqet" => (240 + 40 * $opts{"level"}),
        "thor" => (240 + 38 * $opts{"level"}),
        "fenrir" => (240 + 35 * $opts{"level"}),
        "bastet" => (214 + 39 * $opts{"level"}),
        "apollo" => (225 + 40 * $opts{"level"}),
        "neith" => (230 + 39 * $opts{"level"}),
        "mercury" => (200 + 40 * $opts{"level"}),
        "chiron" => (225 + 40 * $opts{"level"}),
        "hou_yi" => (240 + 38 * $opts{"level"}),
        "nemesis" => (210 + 38 * $opts{"level"}),
        "arachne" => (210 + 41 * $opts{"level"}),
        "kali" => (205 + 34 * $opts{"level"}),
    },
    "attack_chain_progression" => {
        "freya" => [ 1 ],
        "sol" => [ 1 ],
        "scylla" => [ 1 ],
        "nox" => [ 1 ],
        "kukulkan" => [ 1 ],
        "chronos" => [ 1 ],

        "artemis" => [ 1 ],
        "awilix" => [ 1, 0.75, 1.25 ],
        "medusa" => [ 1 ],
        "xbal" => [ 1 ],
        "rama" => [ 1 ],
        "ullr" => [ 1 ],
        "serqet" => [ 1, 0.75, 1.25 ],
        "thor" => [ 1 ],
        "fenrir" => [ 1 ],
        "bastet" => [ 1, 0.7, 1.3 ],
        "apollo" => [ 1 ],
        "neith" => [ 1 ],
        "mercury" => [ 1, 0.75, 1.25 ],
        "chiron" => [ 1 ],
        "hou_yi" => [ 1 ],
        "nemesis" => [ 1, 1, .75, 1.25 ],
        "arachne" => [ .5, 1, 1 ],
        "kali" => [ 1, .5, .5 ],
    },
    "combo" => {
        "sol" => [ "stellar_burst" ],
    }
);

#################################################################################
# ability base stats
#################################################################################

# these stats are not used at runtime, they are used to populate the ability array
# in the god stats object
# the level field is used to pick the correct value out of each of the other fields
# then we don't have to dereference many times to get the right values at runtime

my %ability_stats = (
    "cooldown" => {
        "stellar_burst" => [ 12, 12, 12, 12, 12, 12 ],
        "radiance" => [ 15, 15, 15, 15, 15, 15 ],
    },
    "tick_damage" => {
        "stellar_burst" => [ 0, 40, 70, 100, 130, 160 ],
    },
    "tick_scaling" => {
        "stellar_burst" => [ 0.35, 0.35, 0.35, 0.35, 0.35, 0.35 ],
    },
    "tick_duration" => {
        "stellar_burst" => [ 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 ],
    },
    "num_ticks" => {
        "stellar_burst" => [ 2, 2, 2, 2, 2, 2 ],
    },
    "level" => {
        # character level           [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20 ],
        "stellar_burst" =>          [ 0, 1, 1, 2, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ],
        "radiance" =>               [ 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5 ],
    },
),



#################################################################################
# item stats
#################################################################################

my %item_stats = (

	######################################################################
	# magical items
	######################################################################
	"cooldown_boots" => {
		"mana" => 250,
		"cdr" => .1,
		"magical_power" => 40,
		"gold" => 1500
	},

	"pen_boots" => {
		"magical_power" => 45,
		"flat_pen" => 10,
		"gold" => 1600,
	},

    "void_stone" => {
        "magical_power" => 40,
        "magical_prot" => 50,
        "flat_reduction" => 20,
        "gold" => 2350,
    },

	######################################################################
	# physical items
	######################################################################
    "warrior_tabi" => {
        "physical_power" => 40,
        "gold" => 1550,
    },

    "ninja_tabi" => {
        "physical_power" => 20,
        "attack_speed_modifier" => .2,
        "mana" => 100,
        "gold" => 1500,
    },

    "void_shield" => {
        "physical_power" => 30,
        "physical_prot" => 40,
        "flat_reduction" => 20,
        "gold" => 2700,
    },

    "titans_bane" => {
        "physical_power" => 30,
        "percent_pen" => .33,
        "gold" => 2050,
    },

    "asi" => {
        "flat_pen" => 15,
        "attack_speed_modifier" => .2,
        "lifesteal" => .15,
        "gold" => 1780,
    },

    "jotunns" => {
        "physical_power" => 40,
        "flat_pen" => 10,
        "cdr" => .2,
        "mana" => 150,
        "gold" => 2440,
    },

	######################################################################
	# common items
	######################################################################

    "winged_blade" => {
        "health" => 300,
        "attack_speed_modifier" => .1,
    },

    "sov" => {
        "physical_prot" => 60,
        "health" => 200,
        "gold" => 2100,
    }
);


#################################################################################
# setup god stats for THIS RUN
#################################################################################


# setup these stats so that we can do a lot fewer dereferences when we need them
# $god->{ "crit_chance" } is much faster than $base_stats{ "crit_chance" }->{ $opts{ "god" } }

my %god = (
    "type" => $base_stats{ "type" }->{ $opts{ "god" } },

    "physical_power" => 0,
    "physical_prot" => $base_stats{ "physical_protection" }->{ $opts{ "god" } },

    "magical_power" => 0,
    "magical_prot" => $base_stats{ "magical_protection" }->{ $opts{ "god" } },

    "base_attack_speed" => $base_stats{ "base_attack_speed" }->{ $opts{ "god" } },
    "attack_speed_modifier" => $base_stats{ "attack_speed_modifier" }->{ $opts{ "god" } },
    "attack_chain_progression" => $base_stats{ "attack_chain_progression" }->{ $opts{ "god" } },
    "aa_damage" => $base_stats{ "auto_damage" }->{ $opts{ "god" } },

    "health" => $base_stats{ "health" }->{ $opts{ "god" } },
    "mana" => $base_stats{ "mana" }->{ $opts{ "god" } },

    "cdr" => 0,

    "crit_chance" => 0,
    "lifesteal" => 0,

    "flat_pen" => 0,
    "percent_pen" => 0,
    "flat_reduction" => 0,
    "percent_reduction" => 0,

    "gold" => 0,

    "abilities" => [ ],
);

my %enemy = (
    "type" => $base_stats{ "type" }->{ $opts{ "enemy" } },

    "physical_power" => 0,
    "physical_prot" => $base_stats{ "physical_protection" }->{ $opts{ "enemy" } },

    "magical_power" => 0,
    "magical_prot" => $base_stats{ "magical_protection" }->{ $opts{ "enemy" } },

    "base_attack_speed" => $base_stats{ "base_attack_speed" }->{ $opts{ "enemy" } },
    "attack_speed_modifier" => $base_stats{ "attack_speed_modifier" }->{ $opts{ "enemy" } },
    "attack_chain_progression" => $base_stats{ "attack_chain_progression" }->{ $opts{ "enemy" } },
    "aa_damage" => $base_stats{ "auto_damage" }->{ $opts{ "enemy" } },

    "health" => $base_stats{ "health" }->{ $opts{ "enemy" } },
    "mana" => $base_stats{ "mana" }->{ $opts{ "enemy" } },

    "cdr" => 0,

    "crit_chance" => 0,
    "lifesteal" => 0,

    "flat_pen" => 0,
    "percent_pen" => 0,
    "flat_reduction" => 0,
    "percent_reduction" => 0,

    "gold" => 0,

    "abilities" => [ ],
);




#################################################################################
# apply items
#################################################################################

my @items = split( /\s/, $opts{ "items" } );

foreach my $item (@items) {
    foreach my $stat (keys $item_stats{ $item }) {
	    $god{ $stat } += $item_stats{ $item }->{ $stat };
    }
}

my @enemy_items = split( /\s/, $opts{ "enemy_items" } );

foreach my $item (@enemy_items) {
    foreach my $stat (keys $item_stats{ $item }) {
	    $enemy{ $stat } += $item_stats{ $item }->{ $stat };
    }
}

#################################################################################
# setup abilities for THIS RUN
#################################################################################


foreach my $ability ( @{ $base_stats{ "combo" }->{ $opts{ "god" } } } ) {

    print "ability = " . $ability . "\n";

    push( $god{ "abilities" },

            +{ "name" => $ability,
                "tick_duration" => $ability_stats{ "tick_duration" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "tick_damage" => $ability_stats{ "tick_damage" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "num_ticks" => $ability_stats{ "num_ticks" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "tick_scaling" => $ability_stats{ "tick_scaling" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "cooldown" => $ability_stats{ "cooldown" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
             } );
}

foreach my $ability ( @{ $base_stats{ "combo" }->{ $opts{ "enemy" } } } ) {

    print "ability = " . $ability . "\n";

    push( $enemy{ "abilities" },

            +{ "name" => $ability,
                "tick_duration" => $ability_stats{ "tick_duration" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "tick_damage" => $ability_stats{ "tick_damage" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "num_ticks" => $ability_stats{ "num_ticks" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "tick_scaling" => $ability_stats{ "tick_scaling" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
                "cooldown" => $ability_stats{ "cooldown" }->{ $ability }->[
                                 $ability_stats{ "level" }->{ $ability }->[ $opts{ "level" } ] ],
             } );
}





#################################################################################
#################################################################################
#################################################################################
#                                   MAIN
#################################################################################
#################################################################################
#################################################################################



while ( $iteration < $max_iterations ) {





    while ( both_up() ) {



    } # END SINGLE ITERATION LOOP

} # END MAIN LOOP





print Dumper(%base_stats);
print "\n\n\n\n";
print Dumper(%ability_stats);
print "\n\n\n\n";
print Dumper(%god);

